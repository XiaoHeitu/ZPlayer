<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pMoiveHost.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>